version: "3.4"

services:
  app:
    image: schedule_app:1.0
    volumes:
      - ./:/app
    restart: unless-stopped
    command: ["python3", "run.py"]
    env_file:
      - .env
    expose:
      - ${APP_PORT}
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
      - redis

  # rabbitmq:
  #   image: rabbitmq:3.8-management-alpine
  #   restart: always
  #   ports:
  #     - "15672:15672"
  #   volumes:
  #     # - .docker/data/rabbitmq/data/:/var/lib/rabbitmq/
  #     - .docker/data/rabbitmq/log/:/var/log/rabbitmq/
  #     - .docker/rabbit.conf:/etc/rabbitmq/rabbitmq.conf

  # redis:
  #   image: redis:6-alpine
  #   restart: always
  #   # volumes:
  #   #   - .docker/data/redis:/data

  # worker:
  #   image: schedule_app:1.0
  #   volumes:
  #     - ./:/app
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   command: watchmedo auto-restart --directory=./ --pattern="*.py" --recursive -- celery -A task.run_celery:celery worker --loglevel INFO --autoscale 10,1
  #   # command: celery -A task.run_celery:celery worker --loglevel INFO
  #   links:
  #     - rabbitmq
  #     - redis
  #   depends_on:
  #     - rabbitmq

  # flower:
  #   image: schedule_app:1.0
  #   volumes:
  #     - ./:/app
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   command: celery -A task.run_celery:celery flower --loglevel INFO --port=${FLOWER_PORT} --basic_auth=${AUTH_USERNAME}:${AUTH_PASSWORD} --persistent=True --broker_api=${BROKER_API} --db=.docker/data/flower/flower.db --state_save_interval=5
  #   ports:
  #     - ${FLOWER_PORT}:${FLOWER_PORT}
  #   links:
  #     - rabbitmq
  #     - redis
  #   depends_on:
  #     - rabbitmq
  #     - worker

  webserver:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - .docker/nginx.conf:/etc/nginx/conf.d/default.conf
